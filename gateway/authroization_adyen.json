{
  "id": 807,
  "pattern": "HOSTED_FIELDS",
  "requestType": "AUTHORIZATION",
  "outboundMapping": {
    "url": "https://checkout-test.adyen.com/v66/payments",
    "authenticationIds": [
      2
    ],
    "method": "POST",
    "requestContentType": "application/json",
    "requestExample": "{\n    \"amount\":{\n        \"currency\":\"USD\",\n        \"value\":10\n    },\n    \"additionalData\":{\n        \"allow3DS2\":true\n    },\n    \"channel\":\"web\",\n    \"reference\":\"9527\",\n    \"paymentMethod\":{\n        \"encryptedCardNumber\":\"adyenjs_0_1_25$nIRHDJyHPoFHFwu9mQEsPjaaSTmWEv7YY2nix9EKeuNHS9n+D6MKcGINmeYL73bg4SOSIZTJhQgStGDd8OKLaSSAWtbo19YNTsXOSXN7ewWrZdJRNTM7jtf+sSNNrmQ/213X5TgjRHeAaFy2hde9S+rKuwpX3q/I3L81vGmliWt+UvdAVEdx2K916iWAxTXFXR7Yx0JfbO3O0Syz/2M3mBE87FDYVGJ7xY3nJyPjqRS9wwQHHyD72Q0txHS4SqKwbH8DgLtZwv1Mvxl3vA9mAj1gNY/LCqQssO9aKk+9OpogrpBimFH0MfEPUcHoP/4bhKXxEhwxuMO14uXGRqQJdg==$qXFljD13ASiYUFOTGlbe3SOPsB4bYQbnZcEMA4AWocU37mhnz0MTu0qylS4dz3yaTmE9YhIO/iPVgGrwJZgBDSXs1T7fUrIuskO2L1HxOrcek7yO9PN3kjFHywIxYgQ45SvWN7rPO07Vcv78BDK/hSUe0IrSoKnC/5ONSVtErSLVlxGgRWXPBpNb6mQrvnoOQrVtaxVCEfxVSVKxs0dwnJdFL07Y0RF4SCNK7GcYfDyeDte4prYpmKf2dwUqe6i85m9EOE7CytzMK2qB5ZjEuA5C9FvvjVwosDdhh5M8tnFDqAcqdyABAJ3PFU+JMAdPP+GIEnxzo8XUwc1fk26rL1+AJRo8vxvlG8zwyVf3DNrMD9U+n2mGf7QQvb+dgIg2wYBkeyz+keVn2T8eNCi6g9rB6BNkbQfN5K9OpahN96b5uiVPxlT7fgjbUDK+f4VOMMqkqZ3Q0fYt/7evpGRkYVUDffNKyelYp4CcSH4ZSNvPidNQ/phfd4y9kn3bV4VLBkQ3Cumsu67/ZEClCvCyEGqLTUSN1uTJ1Sz/qJI+xpHiPOUIL1tJdLJfo3/L5SAwItUYE0Sk5WJlhFLQVN/dSrhHcIbcqA0RD8UEjwuFf9ItQNZK0JGLG0cEwiTrs5EIXr3sdKprsCq4xl+l7uDfk/Us+D8Xe5cjiaxnPWueU/cZV87FarLmKSGFpb5RKvazO0mv7VZCuh5PCHQgh9FIjV2+aWnG945UH1QghvPjn0vujRT0INVSr61c\",\n        \"holderName\":\"Will\",\n        \"encryptedSecurityCode\":\"adyenjs_0_1_25$pAzZkhmbrS4VKKqlZQoosIIy0y5qfTlYFD6kbux4eIjfyrnZO42kb7v6D05hmRf5DKV/sGJKVsoAztgZlOForM+v7kmj5N9K40/ZHPi7Q951svx2MotzCIOzlJwSop8EXKQ578fxjYu6GSDEDb+TTHQ5fSwimkR/gZkF3MyiCwRwTAKSEhHsSJt5WGJANEQzJFOGAszGLOFIx2xHG9+UokE50oyKzEirdXyDy/fzcHV41gKfTjxTiWGWcFsnWpSxR/DK8dUTORnJG8NMhg0fnvQlqFNVV6zOAZ3rDJqklGrOJ7JyaiQFL4wA/zyFjnlooN4vMei/U33FzutCArNVCg==$7Exmi+ZlxqZwfbllB4ULd/IXnxUyzYS2LhU/sTXViAGBi3wL2SslmY02umaLwhyDqa2rQL7nA757Hd2h0gkqhCDnpmfMW1p31QqJnTOppphLOyPJADjr4KPzMmlXgyj2Om5Q1A72+zkDzgi3vQ2tBQweOSDAjs5FurRhSh3JHT+iJ8YXx6d3IRLp2H3byKbu6iAUkCsBAoNtum7tClC4CAUEm4g4Zc8ftJ2SgfjBPs1BKZxGlBb1fnfE/KFVwq1UiSQI0cj8Q+wRbFesMKVs+sA4HbrmjOu69hAg5JhAQpoMb3UI1TJtVZOSypcyxEJvGjFBGFJuupMkkEwwMORbeoAluQZMwTonNO8wGlir3gJm/n92lbIjtUpnsrmLUp64V3qZy7LPNdPMrDnc2i+WBjtwfYFrlqFGCVrzhg==\",\n        \"encryptedExpiryYear\":\"adyenjs_0_1_25$rlvN3xwVsulA9j+l81hyzYI6oPOPNXdSeaX9kDyyexfp6f/JpEDjR9KrU1cENBefR04THeBF3jeiiLldeDmgP14X60dgsDC5TAhtsW9XoZv6WfeLvQFSdJJaWPI3Zx2RxJGecVjPnd4Kht50gg6DPOo2By6Afehg0e6stq03zuhYP70talZOlm5cCAgxRUob93IsOQblURJridr4pfYw/X6FMivqfvqWtGsvGUnkIDjbgf36hwuHiKSu4oWCqzbZJ86zk7z8qEfnmB3LaJHchdmhgkydYiIWJ7okqpj0bBdB4CYgNkp30EGhbPmdq5Xa9bsM6jumRAGGcIowAwdDQA==$L/pEsdYMZa2jvhZiw5SVgGGcvdTkmjU/ZzYN/KOmTyacEzA0BHyKPw8yPiRrSkVz4EW1SoZZvf6/iBtceyOcuPzJKTP9VL0/AiPEJG3COVwRu0VEHQtuTVZEInOaTVNvBgeIgoJ7N9HCosJ1rjZx5FVxOXWeDemyF+nnn6L2yGB1QmZSD6k46lovawpxY07ZrNi1jh8cmtE85xSH7v5eyOl4QENY+QCpTvqOKHVl/sp3xWXx0QoyZ/5ZrfmhEVV6zjS9+QnoJLQQ+cGM5Rh8i1fAvZXOo9TD8A5glhhNrTcOGltvPXA67MRBvJGciU0P9v/uAj5bxd5LhPxWYK5cIIG9+rEtQJEovdewoBRBg7+tdjt54fFJ02/W1FVywEWyQHAk6Q1/jSzRKHX2fPoixRf9HwaaxTAjgSNZYd5fLyVFZ+Mg\",\n        \"encryptedExpiryMonth\":\"adyenjs_0_1_25$qBwvZnEaYIUCXxjD6bUiTta1MFgLuxTXKGiso2KS15tQdqsMwVZQS2A138cFYXtLq7xGQG9Y5HP9sEPDMUgzfLzFeDpxekvA9SecVBTCRes1JElLkUiCe08jesuY+JA1HFgEoGJJ7s9kPUg3CJkBwzEYNjWFXEo/2Qy6vdzDkWFaQVGE6YywE8SFbXGB15HwoXdZhCii52ROq0quZdWGY19P0g7eZST6XpstlPNgPLd66EJDmrFPl1b584HRYwBc/zypq1iTqYjPAByDwnmh7T1VxriRn8CxsFgv2X2J0bHkeLlmP8a9Bu5PVfzKRk7pN90d5sm3MaswhuRIYNNvrw==$VhFwnysCmYNuB6WBN6zB2pbh4EiItikiMs87U3IVhI2ajZBX6FNFoipvlgkiNBD4COEBgNKYMIStZo0ZPwg5QN6GrGYcNUA/tVCOuk0Liqf8AIAlzjpC4HCaFi7WOYIjZ4cAk59vNRpaULffsToyukvzlbZmembawTPisFpqlYdHgRGBL3Kdegr8KxvaksZc6vVqhNz+bi2OUbo9p78NmAUcs+Ql6icoHzdSiiaqyancctYyHZkppdO419bQCduSdJ7u8p/+hkon2BWr2YR6q+KYXl+DiBwA13tuJgFGkgZOxaPtPPmNcSjQw7dtwU40QELuTVlsh/R7lBNMFzOBple5/T8+2Axu3J1DpafA4ru5Q0CLPM1jDBrTmUoUlJU8bmVpblMj9EOkZXmgYNvakn1njbZ6VqnGcvAAZPLREji6iE0=\",\n        \"type\":\"scheme\",\n        \"brand\":\"visa\"\n    },\n    \"merchantAccount\":\"SAPCOM_TEST_GATEWAY\"\n}",
    "responseExample": "{\n   \"resultCode\":\"IdentifyShopper\",\n   \"action\":{\n     \"paymentData\":\"Ab02b4c0!BQABAgCuZFJrQOjSsl\\/zt+...\",\n     \"paymentMethodType\":\"scheme\",\n     \"token\":\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY...\",\n     \"type\":\"threeDS2Fingerprint\"\n   },\n   \"authentication\":{\n     \"threeds2.fingerprintToken\":\"eyJ0aHJlZURTTWV0aG9kTm90aWZpY...\"\n   },\n   \"details\":[\n     {\n       \"key\":\"threeds2.fingerprint\",\n       \"type\":\"text\"\n     }\n   ],\n  \"pspReference\": \"852610335894468F\",\n  \"errorCode\": \"14_036\"\n\n}",
    "requestMappingFields": {
      "mappings": [
        {
          "from": "$.reference",
          "to": "${input.referenceId}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.amount.currency",
          "to": "${input.currency}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.amount.value",
          "to": "${input.amount}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.merchantAccount",
          "to": "${vars.merchantCode}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.channel",
          "to": "${input.channel}",
          "map": {
            "BROWSER": "WEB"
          },
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.paymentMethod.encryptedCardNumber",
          "to": "${input.additionalData.paymentMethod.encryptedCardNumber}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.holderName",
          "to": "${input.additionalData.paymentMethod.holderName}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.encryptedSecurityCode",
          "to": "${input.additionalData.paymentMethod.encryptedSecurityCode}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.encryptedExpiryYear",
          "to": "${input.additionalData.paymentMethod.encryptedExpiryYear}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.encryptedExpiryMonth",
          "to": "${input.additionalData.paymentMethod.encryptedExpiryMonth}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.type",
          "to": "${input.additionalData.paymentMethod.type}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.paymentMethod.brand",
          "to": "${input.additionalData.brand}",
          "arrayMapping": false,
          "fixed": true
        },
        {
          "from": "$.additionalData.allow3DS2",
          "to": "${input.additionalData.allow3DS2}",
          "arrayMapping": false,
          "fixed": true
        }
      ]
    },
    "responseMappingFields": {
      "mappings": [
        {
          "from": "errorCode",
          "to": "errorCode",
          "arrayMapping": false,
          "object": false,
          "fixed": false,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "pspReference",
          "to": "pspReference",
          "arrayMapping": false,
          "object": false,
          "fixed": false,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "resultCode",
          "to": "transactionStatus",
          "arrayMapping": false,
          "object": false,
          "fixed": false,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "action.#object",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "action.paymentData",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "action.type",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "action.paymentMethodType",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "action.token",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "['details.#object']",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "details[*].type",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "details[*].key",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "authentication.#object",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "authentication.['threeds2.fingerprintToken']",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        }
      ]
    },
    "responseContentType": "application/json"
  },
  "dynamicScript": {
    "cssUrl": "https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.css",
    "jsUrl": "https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.js",
    "html": "<script src=\"http://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js\"></script>\n<script src=\"https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.js\"></script>\n<link rel=\"stylesheet\" href=\"https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.css\">\n\n<div id=\"dropin-container\"></div>\n<script>\n    const orderId = '${input.orderId}';\n    const referenceId = '${input.referenceId}';\n    const amount = '${input.amount}';\n    const resultURL = '${input.resultURL}/${input.referenceId}';\n    const contentLanguage = '${input.languageCode}-${input.countryCode}';\n    const submitApiUrl = '${input.submitURL}';\n    const submitCompleteApiUrl = '${input.submitCompleteURL}';\n    const authorization = localStorage.getItem('o-auth-token') || localStorage.getItem('Authorization') || '';\n    const customerSessionId = localStorage.getItem('guest-customer-session-id') || localStorage.getItem('Customer-session-id') || '';\n    const paymentMethodsResponse = JSON.parse('${input.responseBody}'.replaceAll('&quot;', '\"'));\n    const clientKey = '${vars.clientKey}';\n    const environment = 'test';\n    const paymentFormTitle = '${vars.paymentFormTitle}';\n\n\n    function makePayment(data) {\n        const additionalData = [\n            {'key': 'paymentMethod', 'value': data.paymentMethod},\n            {'key': 'returnUrl', 'value': resultURL},\n            {'key': 'allow3DS2', 'value': true}\n        ];\n        const submitBody = {\n            'paymentMethod': 'CREDIT_CARD',\n            'channel': 'BROWSER',\n            'amount': amount,\n            'orderId': orderId,\n            'upscalePaymentSessionID': referenceId,\n            'browserInfo': data.browserInfo,\n            'additionalData': additionalData\n        }\n        return $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            contentType: 'application/json; charset=utf-8',\n            url: submitApiUrl,\n            headers: {\n                'Content-Language': contentLanguage,\n                'Authorization': authorization,\n                'Customer-session-id': customerSessionId\n            },\n            data: JSON.stringify(submitBody)\n        });\n    }\n\n    function makeDetailsCall(data) {\n        const additionalData = [\n            {'key': 'paymentData', 'value': data.paymentData || ''},\n            {'key': 'threeds2_fingerprint', 'value': data.details['threeds2.fingerprint'] || ''},\n            {'key': 'threeds2_challengeResult', 'value': data.details['threeds2.challengeResult'] || ''},\n            {'key': 'MD', 'value': data.details.MD || ''},\n            {'key': 'PaRes', 'value': data.details.PaRes || ''}\n        ];\n        const submitCompleteBody = {\n            'upscalePaymentSessionID': referenceId,\n            'additionalData': additionalData\n        }\n        return $.ajax({\n            type: 'POST',\n            dataType: 'json',\n            contentType: 'application/json; charset=utf-8',\n            url: submitCompleteApiUrl,\n            headers: {\n                'Content-Language': contentLanguage,\n                'Authorization': authorization,\n                'Customer-session-id': customerSessionId\n            },\n            data: JSON.stringify(submitCompleteBody)\n        });\n    }\n\n    function showFinalResult(response) {\n        if (response) {\n            console.log(response);\n        }\n    }\n\n    function createPaymentConfiguration(paymentMethodsResponse) {\n        return {\n            paymentMethodsResponse: paymentMethodsResponse, // The `/paymentMethods` response from the server.\n            clientKey: clientKey, // Web Drop-in versions before 3.10.1 use originKey instead of clientKey.\n            locale: contentLanguage,\n            environment: environment,\n            onSubmit: (state, dropin) => {\n                // Your function calling your server to make the `/payments` request\n                makePayment(state.data)\n                    .then(response => {\n                        if (response.action) {\n                            // Drop-in handles the action object from the /payments response\n                            dropin.handleAction(response.action);\n                        } else {\n                            // Your function to show the final result to the shopper\n                            showFinalResult(response);\n                        }\n                    })\n                    .catch(error => {\n                        throw Error(error);\n                    });\n            },\n            onAdditionalDetails: (state, dropin) => {\n                // Your function calling your server to make a `/payments/details` request\n                makeDetailsCall(state.data)\n                    .then(response => {\n                        if (response.action) {\n                            // Drop-in handles the action object from the /payments response\n                            dropin.handleAction(response.action);\n                        } else {\n                            // Your function to show the final result to the shopper\n                            showFinalResult(response);\n                        }\n                    })\n                    .catch(error => {\n                        throw Error(error);\n                    });\n            },\n            paymentMethodsConfiguration: {\n                card: { // Example optional configuration for Cards\n                    hasHolderName: true,\n                    holderNameRequired: true,\n                    enableStoreDetails: true,\n                    hideCVC: false, // Change this to true to hide the CVC field for stored cards\n                    name: paymentFormTitle,\n                    billingAddressRequired: false\n                }\n            }\n        };\n    }\n\n    configuration = createPaymentConfiguration(paymentMethodsResponse);\n    checkout = new AdyenCheckout(configuration);\n    dropin = checkout.create('dropin').mount('#dropin-container');\n</script>",
    "cssUrls": [
      {
        "url": "https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.css"
      }
    ],
    "jsUrls": [
      {
        "url": "https://checkoutshopper-test.adyen.com/checkoutshopper/sdk/3.18.2/adyen.js"
      }
    ]
  },
  "remoteApiOutboundMapping": {
    "url": "https://checkout-test.adyen.com/v66/paymentMethods",
    "authenticationIds": [
      2
    ],
    "method": "POST",
    "requestContentType": "application/json",
    "requestExample": "{\n\t\"merchantAccount\": \"SAPCOM_TEST_GATEWAY\",\n\t\"countryCode\": \"US\",\n\t\"amount\": {\n\t\t\"currency\": \"USD\",\n\t\t\"value\": 10\n\t},\n\t\"channel\": \"Web\",\n\t\"shopperLocale\": \"en-US\"\n}",
    "responseExample": "{\n    \"paymentMethods\": [\n        {\n            \"brands\": [\n                \"visa\",\n                \"mc\"\n            ],\n            \"details\": [\n                {\n                    \"key\": \"number\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"key\": \"expiryMonth\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"key\": \"expiryYear\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"key\": \"cvc\",\n                    \"type\": \"text\"\n                },\n                {\n                    \"key\": \"holderName\",\n                    \"optional\": true,\n                    \"type\": \"text\"\n                }\n            ],\n            \"name\": \"Credit Card\",\n            \"type\": \"scheme\"\n        }\n    ]\n}",
    "requestMappingFields": {
      "mappings": [
        {
          "from": "$.amount.currency",
          "to": "${input.currency}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.amount.value",
          "to": "${input.amount}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.merchantAccount",
          "to": "${vars.merchantCode}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.countryCode",
          "to": "${input.countryCode}",
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.channel",
          "to": "${input.channel}",
          "map": {
            "BROWSER": "WEB"
          },
          "arrayMapping": false,
          "fixed": false
        },
        {
          "from": "$.shopperLocale",
          "to": "${input.languageCode}",
          "arrayMapping": false,
          "fixed": false
        }
      ]
    },
    "responseMappingFields": {
      "mappings": [
        {
          "from": "['paymentMethods.#object']",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "$paymentMethods.#text",
          "to": "paymentMethods",
          "arrayMapping": false,
          "object": false,
          "fixed": false,
          "isCustom": true,
          "persistCustomField": false
        },
        {
          "from": "paymentMethods[*].['brands.#object']",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "paymentMethods[*].name",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "paymentMethods[*].['details.#object']",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        },
        {
          "from": "paymentMethods[*].type",
          "arrayMapping": false,
          "object": false,
          "fixed": true,
          "isCustom": false,
          "persistCustomField": false
        }
      ]
    },
    "responseContentType": "application/json"
  },
  "verify": {
    "localVerifyMapping": {
      "mappings": [
        {
          "from": "authResult",
          "to": "result",
          "map": {
            "AUTHORISED": "AUTHORIZED",
            "UNAUTHORISED": "UNAUTHORIZED",
            "CANCELLED": "CANCELLED",
            "AUTHORIZED": "AUTHORIZED",
            "UNAUTHORIZED": "UNAUTHORIZED"
          },
          "arrayMapping": false,
          "object": false,
          "fixed": false,
          "isCustom": false,
          "persistCustomField": false
        }
      ]
    },
    "localVerifyAuthenticationId": 200
  }
}